stocservice_lib = shared_library('stocservices',
    'source/typeconv/convert.cxx',
    'source/uriproc/ExternalUriReferenceTranslator.cxx',
    'source/uriproc/UriReference.cxx',
    'source/uriproc/UriReferenceFactory.cxx',
    'source/uriproc/UriSchemeParser_vndDOTsunDOTstarDOTexpand.cxx',
    'source/uriproc/UriSchemeParser_vndDOTsunDOTstarDOTscript.cxx',
    'source/uriproc/VndSunStarPkgUrlReferenceFactory.cxx',
  udk_fake_h, off_fake_h,
  cpp_args: ['-DLIBO_INTERNAL_ONLY'],
  include_directories: [main_inc, udkh_inc, offapi_inc],
  link_with: [cppu_lib, cppuhelper_lib, sal_lib],
  dependencies: [],
)

reflection_lib = shared_library('reflection',
  'source/corereflection/crarray.cxx',
  'source/corereflection/crbase.cxx',
  'source/corereflection/crcomp.cxx',
  'source/corereflection/crefl.cxx',
  'source/corereflection/crenum.cxx',
  'source/corereflection/criface.cxx',
  udk_fake_h, off_fake_h,
  cpp_args: ['-DLIBO_INTERNAL_ONLY'],
  include_directories: [main_inc, udkh_inc, offapi_inc],
  link_with: [cppu_lib, cppuhelper_lib, sal_lib],
  dependencies: [],
)

invocation_lib = shared_library('invocation',
  'source/invocation/invocation.cxx',
  udk_fake_h, off_fake_h,
  cpp_args: ['-DLIBO_INTERNAL_ONLY'],
  include_directories: [main_inc, udkh_inc, offapi_inc],
  link_with: [cppu_lib, cppuhelper_lib, sal_lib],
  dependencies: [],
)

proxyfac_lib = shared_library('proxyfac',
  'source/proxy_factory/proxyfac.cxx',
  udk_fake_h, off_fake_h,
  cpp_args: ['-DLIBO_INTERNAL_ONLY'],
  include_directories: [main_inc, udkh_inc, offapi_inc],
  link_with: [cppu_lib, cppuhelper_lib, sal_lib],
  dependencies: [],
)

invocadapt_lib = shared_library('invocadapt',
  'source/invocation_adapterfactory/iafactory.cxx',
  udk_fake_h, off_fake_h,
  cpp_args: ['-DLIBO_INTERNAL_ONLY'],
  include_directories: [main_inc, udkh_inc, offapi_inc],
  link_with: [cppu_lib, cppuhelper_lib, sal_lib],
  dependencies: [],
)

namingservice_lib = shared_library('namingservice',
  'source/namingservice/namingservice.cxx',
  udk_fake_h, off_fake_h,
  cpp_args: ['-DLIBO_INTERNAL_ONLY'],
  include_directories: [main_inc, udkh_inc, offapi_inc],
  link_with: [cppu_lib, cppuhelper_lib, sal_lib],
  dependencies: [],
)

introspection_lib = shared_library('introspection',
  'source/inspect/introspection.cxx',
  udk_fake_h, off_fake_h,
  cpp_args: ['-DLIBO_INTERNAL_ONLY'],
  include_directories: [main_inc, udkh_inc, offapi_inc],
  link_with: [cppu_lib, cppuhelper_lib, sal_lib, salhelper_lib],
  dependencies: [],
)

boostrap_lib = shared_library('bootstrap',
  'source/defaultregistry/defaultregistry.cxx',
  'source/implementationregistration/implreg.cxx',
  'source/implementationregistration/mergekeys.cxx',
  'source/loader/dllcomponentloader.cxx',
  'source/security/access_controller.cxx',
  'source/security/file_policy.cxx',
  'source/security/permissions.cxx',
  'source/servicemanager/servicemanager.cxx',
  'source/simpleregistry/simpleregistry.cxx',
  cpp_args: ['-DLIBO_INTERNAL_ONLY'],
  include_directories: [main_inc, udkh_inc, offapi_inc],
  link_with: [comphelper_lib, cppu_lib, cppuhelper_lib, reg_lib, sal_lib, salhelper_lib, tl_lib],
  dependencies: [],
)
